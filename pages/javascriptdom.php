<h2 class="pt-4 fs-4 text-center">
JavaScript DOM
</h2>
	

    <p class="pt-4 fs-6">   
        Обектният модел на документа (DOM) в JavaScript е най-важната концепция за front end developer, тя позволява манипулирането и интеракцията с уеб страници и всички елементи в тях. DOM представлява йерархична структура, която описва уеб страницата като дърво от обекти, където всеки обект представлява елемент или част от страницата. 
    </p>

    <img src="./assets/images/jsdom.jpg" style="max-width: 550px; margin: auto" alt="#">

    <p class="pt-4 fs-6">   
        DOM, не е програмен език, а просто начина по който се сглобява нашият сайт. Благодарение на него ние можем да избираме дадени елементи в ХТМЛ чрез DOM, и да ги променяме или махаме  в него. Примери за какво бихме могли да правим са:
    </p>

<div class="col-12 row my-3">
    <ul class="col-12">
        <li class="pt-4 fs-6 col-12">   
        Достъпването на елементи: Можем да избираме и променяме HTML или XML елементи на уеб страницата. Например, можем да намерим и променим текста на заглавие, да добавим нов елемент или да променим стиловете на елементите.       
        </li>

        <li class="pt-4 fs-6 col-12">   
        Променя структурата: JavaScript може да добавя, изтрива или променя елементи и техните атрибути. Това прави възможни динамични промени в уеб страницата без презареждане на цялата страница. Пример затова е бутон да се скрива и появява отстрани когато го подминем.
        </li>

        <li class="pt-4 fs-6 col-12">   
        Реагира на събития: Можем да свържем JavaScript събития с определени елементи, като кликане, навлизане на мишката и др. Това позволява създаването на интерактивни и отзивчиви уеб приложения.
        </li>

        <li class="pt-4 fs-6 col-12">   
        Изпълнява анимации и ефекти: С DOM и JavaScript можем да създаваме анимации, слайдшоута, преходи и други визуални ефекти.
        </li>

        <li class="pt-4 fs-6 col-12">   
        Комуникира със сървъра: JavaScript може да изпраща заявки към сървъра и да обработва получените данни. Това е основа за изграждането на уеб приложения, които обменят данни със сървъра без презареждане на страницата.
        </li>

        <li class="pt-4 fs-6 col-12">   
        Валидация на формуляри: DOM съчетан с JavaScript често се използва за валидация на формуляри преди тяхното изпращане към сървъра. Това помага на потребителите да предоставят правилни и пълни данни.
        </li>
    </ul>
</div>

<p class="codepen" data-height="300" data-theme-id="dark" data-default-tab="html,result" data-slug-hash="yLGPMXG" data-editable="true" data-user="obama-max" style="height: 300px; box-sizing: border-box; display: flex; align-items: center; justify-content: center; border: 2px solid; margin: 1em 0; padding: 1em;">
  <span>See the Pen <a href="https://codepen.io/obama-max/pen/yLGPMXG">
  JS DOM example</a> by Darius Popov (<a href="https://codepen.io/obama-max">@obama-max</a>)
  on <a href="https://codepen.io">CodePen</a>.</span>
</p>
<script async src="https://cpwebassets.codepen.io/assets/embed/ei.js"></script>

<p class="mt-5 fs-6">   
В заключение, JavaScript DOM е мощен инструмент, който позволява на разработчиците да създават интерактивни, динамични и функционални уеб приложения, които подобряват потребителското изживяване в интернет. Този модел е сърцето на уеб разработката и е от съществено значение за създаването на съвременни уеб сайтове и приложения.
</p>	

