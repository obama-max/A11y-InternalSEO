<h2 class="pt-4 fs-4">
Flex елементи
</h2>

	<p class="pt-4 fs-6">
   
    Flexbox е модел за оформление с CSS, проектиран да разпределя пространство ефективно и да подравнява елементите в контейнер, наречен "гъвкав контейнер" или "flex container". Гъвкавите елементи са индивидуалните елементи в този контейнер, които се подчиняват на свойствата на гъвкавата оформление. Flexbox често се използва за създаване на отзивчиви и гъвкави оформления, без да се разчита тежко на float-ове или позициониране.
	</p>

	<p class="pt-4 fs-4">	
        Ето всичко, което трябва да знаете за гъвкавите елементи във Flexbox:
    </p>	

	<div class="row fs-6">
		<div class="col-6">
			<p>
				<ul>
					<li>
                    Гъвкав контейнер и гъвкави елементи: За да създадете гъвкаво оформление, ви е нужен гъвкав контейнер, а неговите директни деца стават гъвкави елементи.
                    </li>	

					<li class="mt-2">
                    Свойство за показване: За да направите елемент гъвкав контейнер, задайте му свойството за показване (display) като "flex". Това превръща директните деца на контейнера в гъвкави елементи.
                    </li>
                    <li class="mt-2">
                    Свойства на гъвкавите елементи:

flex: Комбинира flex-grow, flex-shrink и flex-basis в едно свойство.
flex-grow: Определя колко гъвкави елементи трябва да се разширяват спрямо други елементи.
flex-shrink: Определя колко гъвкави елементи да намалят, ако няма достатъчно място.
flex-basis: Задава началния размер на гъвкав елемент.
align-self: Замества align-items за единичен елемент.                    </li>		
                </ul>	 
			</p>     
		</div>

		<div class="col-6">
			<p>
				<ul>
					<li>
                    Основна и перпендикулярна ос: Гъвкавите елементи се подреждат по две оси: основна ос и перпендикулярна ос. Основната ос се определя от свойството flex-direction, а перпендикулярната ос е перпендикулярна на основната ос.
                    </li>

					<li class="mt-2">
                    Свойства на гъвкавост: Гъвкавите елементи се засягат от различни свойства:

flex-direction: Определя посока на основната ос (row, row-reverse, column, column-reverse).
flex-wrap: Контролира дали гъвкавите елементи обвиват на нови редове или остават на един ред (nowrap, wrap, wrap-reverse).
justify-content: Определя подравняването по основната ос (flex-start, flex-end, center, space-between, space-around, space-evenly).
align-items: Подравнява гъвкавите елементи по перпендикулярната ос (flex-start, flex-end, center, baseline, stretch).
align-content: Контролира разстоянието между множество редове по перпендикулярната ос.				
</ul>	
			</p>     
		</div>
	</div>	
	
    <p class="codepen" data-height="300" data-theme-id="dark" data-default-tab="html,result" data-slug-hash="mdQNqXZ" data-editable="true" data-user="obama-max" style="height: 300px; box-sizing: border-box; display: flex; align-items: center; justify-content: center; border: 2px solid; margin: 1em 0; padding: 1em;">
  <span>See the Pen <a href="https://codepen.io/obama-max/pen/mdQNqXZ">
  Flex example</a> by Darius Popov (<a href="https://codepen.io/obama-max">@obama-max</a>)
  on <a href="https://codepen.io">CodePen</a>.</span>
</p>

    <p class="pt-4 fs-6">
    В този пример:

.flex-container е гъвкав контейнер, който подрежда елементите с равно разстояние помежду им хоризонтално.
Класът .flex-item задава стили за всеки гъвкав елемент, като например равна ширина и граница.
Гъвкавостта предоставя мощен начин за създаване на разнообразни и отзивчиви оформления, което улеснява управлението на позиционирането и подравняването на елементи в рамките на контейнер.
    </p>